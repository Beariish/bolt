import print from core
import arrays

type Component = { _owner: any }
type Entity = { components: [Component] }

method Component.init(owner: Entity) { this._owner = owner }
method Component.update(dt: number) { }
method Component.draw {}

fn Entity.new {
    return Entity => { components: [:Component] }
}

method Entity.update(dt: number) {
    for component in arrays.each(this.components) {
        component.update(dt)
    }
}

type PrinterComponent = Component + {
    message: string
}

method PrinterComponent.update(dt: number) {
    print(this.message)
}

type CounterComponent = Component + {
    count: number
}

method CounterComponent.update(dt: number) {
    print("Count:", this.count)
    this.count += 1
}

let entity = Entity.new()
entity.components.push(Component => { _owner: entity })
entity.components.push(PrinterComponent => { _owner: entity, message: "hello!" })
entity.components.push(CounterComponent => { _owner: entity, count: 0 })

entity.update(0)
entity.update(0)
entity.update(0)
entity.update(0)
