import * from "../../test"

push_scope("iterators")

test("numeric for loop iterator type inference", fn {
    for i in 1 {
        expect(typeof(i) == number, "Expected 'i' to be 'number'")
        expect(i is number,         "Expected 'i' to be 'number'")
    }
})

test("numeric for loop with start index iterator type inference", fn {
    for i in 1 to 2 {
        expect(typeof(i) == number, "Expected 'i' to be 'number'")
        expect(i is number,         "Expected 'i' to be 'number'")
    }
})

test("numeric for loop with start index and step iterator type inference", fn {
    for i in 1 to 2 by 10 {
        expect(typeof(i) == number, "Expected 'i' to be 'number'")
        expect(i is number,         "Expected 'i' to be 'number'")
    }
})

test("closure for loop iterator type inference", fn {
    let const arr = [1]
    let const iter = arr.each()

    expect(typeof(iter) == type(fn: number?), "Expected 'iter' to be 'fn: number?'")

    ensure_branch()
    for item in iter {
        expect_branched(typeof(item) == number, "Expected 'item' to be 'number'")
        expect         (item is number,         "Expected 'item' to be 'number'")
    }
})

pop_scope()