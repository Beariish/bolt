import print, to_string, write from core
import pairs from tables

fn pretty_print_internal(x: any, indent: string, indent_single: bool): ! {
    if let t = x as table {
        if indent_single {
            print(indent + "{")
        } else {
            print("{")
        }
        for pair in pairs(t) {
            write(indent + "   " + to_string(pair.key) + ": ") 
            pretty_print_internal(pair.value, indent + "   ", false)
        }
        print(indent + "}")
    } else if let a = x as type([any]) {
        print("[")
        for item in a.each() {
            pretty_print_internal(item, indent + "   ", true)
        }
        print(indent + "]")
    } else {
        let to_print = to_string(x)
        if x is string { to_print = "\"" + to_print + "\"" }

        if indent_single {
            print(indent + to_print)
        } else {
            print(to_print)
        }
    }
}

export fn pretty_print(x: any) {
    pretty_print_internal(x, "", false)
}