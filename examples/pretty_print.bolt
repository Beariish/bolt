import print, to_string, write from core
import pairs from tables

fn pretty_print_internal(x: any, indent: string, indent_single: bool): ! {
    let indent_this = if indent_single then indent else ""
    match x {
        is table {
            print(indent_this + "{")
            for pair in pairs(x) {
                write(indent + "   " + to_string(pair.key) + ": ") 
                pretty_print_internal(pair.value, indent + "   ", false)
            }
            print(indent + "}")
        }

        is type([any]) {
            print("[")
            for item in x.each() {
                pretty_print_internal(item, indent + "   ", true)
            }
            print(indent + "]")
        }

        is string {
            print(indent_this + "\"" + x + "\"")
        }

        else {
            print(indent_this + to_string(x))
        }
    }
}

export fn pretty_print(x: any) {
    pretty_print_internal(x, "", false)
}